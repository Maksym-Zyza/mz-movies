{"version":3,"sources":["api/movies-api.js","components/Loader.jsx","components/Searchbar/Searchbar.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/scrollTo.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Nothing.jsx","views/MoviesPage.jsx"],"names":["axios","defaults","baseURL","params","api_key","language","getMoviesTrending","a","url","data","results","alert","getSerchMovies","query","page","response","movie_id","propTypes","PropTypes","string","isRequired","number","api","getMovieDetails","getMovieCredits","getMoviesReviews","Loader","isLoading","className","loading","color","module","exports","Searchbar","state","search","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","st","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","onChange","React","Component","Button","onClick","btnDiv","scrollTo","window","top","document","documentElement","scrollHeight","behavior","MoviesGallery","src","location","useLocation","movies","map","id","poster_path","title","vote_average","to","pathname","from","alt","withRouter","Nothing","MoviesPage","error","formSubmitQuery","feachMovies","then","prevState","catch","console","log","finally","prevProps","renderBtn","length","nothing","scroll"],"mappings":"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","file":"static/js/movie-views.6edc303f.chunk.js","sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '523a15ded98cd05fab36993344058e43';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\n// список популярных фильмов на сегодня для создания коллекции на главной странице\nconst getMoviesTrending = async () => {\n  try {\n    const url = { url: `trending/movie/day` };\n    const { data } = await axios(url);\n    return data.results;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n};\n\n// поиск кинофильма по ключевому слову на странице фильмов\nasync function getSerchMovies(query, page) {\n  try {\n    const url = { url: 'search/movie', params: { query, page } };\n    const response = await axios(url);\n    return response;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\ngetSerchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\n// запрос полной информации о фильме для страницы кинофильма\nasync function getMovieDetails(movie_id) {\n  try {\n    const url = { url: `movie/${movie_id}` };\n    const { data } = await axios(url, movie_id);\n    return data;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// запрос информации о актёрском составе для страницы кинофильма\nasync function getMovieCredits(movie_id) {\n  try {\n    const url = { url: `movie/${movie_id}/credits` };\n    const response = axios(url, movie_id);\n    return response;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// запрос обзоров для страницы кинофильма\nasync function getMoviesReviews(movie_id) {\n  try {\n    const url = { url: `movie/${movie_id}/reviews` };\n    const response = axios(url, movie_id);\n    return response;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\nconst api = {\n  getMoviesTrending,\n  getSerchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMoviesReviews,\n};\n\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\n\nconst Loader = isLoading => {\n  return (\n    <div className=\"loaderDiv\">\n      <PropagateLoader loading={isLoading} color={'red'} />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchForm_button\":\"Searchbar_SearchForm_button__3eKQ3\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__5zUwS\",\"SearchForm_input\":\"Searchbar_SearchForm_input__11BIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"btnDiv\":\"Button_btnDiv__1IJi6\"};","import React from 'react';\nimport st from './Searchbar.module.css';\n\nclass Searchbar extends React.Component {\n  state = {\n    search: '',\n  };\n\n  handleChange = e => {\n    this.setState({ search: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // передача пропа в MoviesPage\n    this.props.onSubmit(this.state.search);\n\n    this.setState({ search: '' });\n  };\n\n  render() {\n    const { search } = this.state;\n\n    return (\n      <header className={st.Searchbar}>\n        <form onSubmit={this.handleSubmit} className={st.SearchForm}>\n          <button type=\"submit\" className={st.SearchForm_button}>\n            <span className={st.SearchForm_button_label}>Search</span>\n          </button>\n\n          <input\n            className={st.SearchForm_input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={search}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport st from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <div className={st.btnDiv}>\n      <button className={st.Button} type=\"button\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","const scrollTo = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n};\n\nexport default scrollTo;\n","import React from 'react';\nimport { Link, useLocation, withRouter } from 'react-router-dom';\n\nclass MoviesGallery extends React.Component {\n  state = {\n    src: 'https://image.tmdb.org/t/p/w500',\n    location: useLocation,\n  };\n\n  render() {\n    const { src } = this.state;\n    const { movies, location } = this.props;\n\n    return (\n      <div className=\"container\">\n        <ul className=\"movies_ul\">\n          {movies.map(({ id, poster_path, title, vote_average }) => (\n            <Link\n              key={id}\n              to={{\n                pathname: `/movies/${id}`,\n                state: { from: `${location.pathname}` },\n              }}\n            >\n              <li className=\"movies_li\">\n                <img\n                  className=\"movies_img\"\n                  src={`${src}${poster_path}`}\n                  alt={title}\n                />\n                <p className=\"movies_title\"> {title}</p>\n                <p className=\"movies_rating\">\n                  <span className=\"rating\">{vote_average}</span>\n                </p>\n              </li>\n            </Link>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MoviesGallery);\n","import React from 'react';\n\nconst Nothing = () => {\n  return (\n    <div>\n      <h2 className=\"page_title\">Nothing, please start your search</h2>\n    </div>\n  );\n};\n\nexport default Nothing;\n","import React from 'react';\nimport api from '../api/movies-api';\nimport Searchbar from '../components/Searchbar/Searchbar';\nimport Loader from '../components/Loader';\nimport Button from '../components/Button/Button';\nimport scrollTo from '../components/scrollTo';\nimport MoviesGallery from '../components/MoviesGallery';\nimport Nothing from '../components/Nothing';\n\nclass MoviesPage extends React.Component {\n  state = {\n    movies: [],\n    page: 1,\n    query: '',\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.feachMovies();\n    }\n  }\n\n  formSubmitQuery = search => {\n    this.setState({ query: search, movies: [], page: 1, error: null });\n  };\n\n  feachMovies = () => {\n    const { query, page } = this.state;\n    this.setState({ isLoading: true });\n\n    api\n      .getSerchMovies(query, page)\n      .then(response => {\n        this.setState(prevState => ({\n          movies: [...prevState.movies, ...response.data.results],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch(error => {\n        console.log(error);\n        return [];\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleChange = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  render() {\n    const { movies, isLoading, error } = this.state;\n    const renderBtn = movies.length > 0 && !isLoading;\n    const nothing = movies.length === 0;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.formSubmitQuery} />\n\n        <MoviesGallery movies={movies} />\n\n        {isLoading && <Loader isLoading={isLoading} />}\n\n        {renderBtn && <Button onClick={this.feachMovies} scroll={scrollTo()} />}\n\n        {error && <h1>{error}</h1>}\n\n        {nothing && <Nothing />}\n      </div>\n    );\n  }\n}\n\nexport default MoviesPage;\n"],"sourceRoot":""}