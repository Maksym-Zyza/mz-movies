{"version":3,"sources":["api/movies-api.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","img/default.jpg","views/Cast.jsx","views/Reviews.jsx","views/MovieDetailsPage.jsx"],"names":["axios","defaults","baseURL","params","api_key","language","getMoviesTrending","a","url","data","results","alert","getSerchMovies","query","page","response","movie_id","propTypes","PropTypes","string","isRequired","number","api","getMovieDetails","getMovieCredits","getMoviesReviews","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Cast","state","src","isLoading","cast","fetchCredits","movieId","props","match","setState","then","catch","error","console","log","finally","this","className","map","cast_id","profile_path","name","character","alt","defaultImg","Loader","React","Component","Reviews","reviews","fetchReviews","id","author","content","MovieDetailsPage","release_date","fetchDetails","result","hendleGoBack","location","history","from","routes","home","original_title","poster_path","overview","popularity","vote_average","vote_count","genres","type","onClick","String","Math","round","Navigetion","NavMovieDetails","path","component"],"mappings":"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","file":"static/js/6.2431e5d4.chunk.js","sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '523a15ded98cd05fab36993344058e43';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\n// список популярных фильмов на сегодня для создания коллекции на главной странице\nconst getMoviesTrending = async () => {\n  try {\n    const url = { url: `trending/movie/day` };\n    const { data } = await axios(url);\n    return data.results;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n};\n\n// поиск кинофильма по ключевому слову на странице фильмов\nasync function getSerchMovies(query, page) {\n  try {\n    const url = { url: 'search/movie', params: { query, page } };\n    const response = await axios(url);\n    return response;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\ngetSerchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\n// запрос полной информации о фильме для страницы кинофильма\nasync function getMovieDetails(movie_id) {\n  try {\n    const url = { url: `movie/${movie_id}` };\n    const { data } = await axios(url, movie_id);\n    return data;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// запрос информации о актёрском составе для страницы кинофильма\nasync function getMovieCredits(movie_id) {\n  try {\n    const url = { url: `movie/${movie_id}/credits` };\n    const response = axios(url, movie_id);\n    return response;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// запрос обзоров для страницы кинофильма\nasync function getMoviesReviews(movie_id) {\n  try {\n    const url = { url: `movie/${movie_id}/reviews` };\n    const response = axios(url, movie_id);\n    return response;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\nconst api = {\n  getMoviesTrending,\n  getSerchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMoviesReviews,\n};\n\nexport default api;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import React from 'react';\nimport api from '../api/movies-api';\nimport defaultImg from '../img/default.jpg';\nimport Loader from '../components/Loader';\n\nclass Cast extends React.Component {\n  state = {\n    src: 'https://image.tmdb.org/t/p/w500',\n    isLoading: false,\n    cast: [],\n  };\n\n  componentDidMount() {\n    this.fetchCredits();\n  }\n\n  fetchCredits = () => {\n    const { movieId } = this.props.match.params;\n    this.setState({ isLoading: true });\n\n    api\n      .getMovieCredits(movieId)\n      .then(response => {\n        this.setState({ cast: [...response.data.cast] });\n      })\n      .catch(error => {\n        console.log(error);\n        return [];\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { cast, src, isLoading } = this.state;\n\n    return (\n      <>\n        <div className=\"container\">\n          <ul className=\"cast_ul\">\n            {cast.map(({ cast_id, profile_path, name, character }) => (\n              <li key={cast_id} className=\"cast_li\">\n                {profile_path ? (\n                  <img\n                    src={`${src}${profile_path}`}\n                    alt=\"Movie poster\"\n                    className=\"cast_img\"\n                  />\n                ) : (\n                  <img\n                    src={defaultImg}\n                    alt=\"Was not found\"\n                    className=\"cast_img\"\n                  />\n                )}\n                <h3 className=\"cast_title\">{name}</h3>\n                <p className=\"cast_text\">{character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {isLoading && <Loader isLoading={isLoading} />}\n      </>\n    );\n  }\n}\n\nexport default Cast;\n","import React from 'react';\nimport api from '../api/movies-api';\n\nclass Reviews extends React.Component {\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    this.fetchReviews();\n  }\n\n  fetchReviews = () => {\n    const { movieId } = this.props.match.params;\n\n    api\n      .getMoviesReviews(movieId)\n      .then(response => {\n        this.setState({ reviews: [...response.data.results] });\n      })\n      .catch(error => {\n        console.log(error);\n        return [];\n      });\n  };\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <div>\n        <ul>\n          {reviews.length > 0\n            ? reviews.map(({ id, author, content }) => (\n                <li key={id}>\n                  <h3 className=\"data\">{author}</h3>\n                  <p className=\"text\">{content}</p>\n                </li>\n              ))\n            : `We don't have any reviews for this movie.`}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Reviews;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport api from '../api/movies-api';\nimport Navigetion from '../components/Navigetion';\nimport routes from '../routes';\n\nclass MovieDetailsPage extends React.Component {\n  state = {\n    src: 'https://image.tmdb.org/t/p/w500',\n    release_date: null,\n  };\n\n  componentDidMount() {\n    this.fetchDetails();\n  }\n\n  fetchDetails = () => {\n    const { movieId } = this.props.match.params;\n\n    api.getMovieDetails(movieId).then(result => {\n      this.setState({ ...result });\n    });\n  };\n\n  hendleGoBack = () => {\n    const { location, history } = this.props;\n    //     if (location.state && location.state.from) {\n    //       return history.push(location.state.from);\n    //  }\n    history.push(location?.state?.from || history.push(routes.home));\n  };\n\n  render() {\n    const {\n      src,\n      original_title,\n      poster_path,\n      overview,\n      release_date,\n      popularity,\n      vote_average,\n      vote_count,\n      genres,\n    } = this.state;\n    const { match } = this.props;\n\n    return (\n      <div className=\"movie_div container\">\n        <button className=\"movie_btn\" type=\"button\" onClick={this.hendleGoBack}>\n          &#9668; Back\n        </button>\n        <h2 className=\"movie_title\">{original_title}</h2>\n        {poster_path && (\n          <img\n            className=\"movie_img\"\n            src={`${src}${poster_path}`}\n            alt={original_title}\n          />\n        )}\n\n        <div className=\"movie_info\">\n          <p className=\"text\">\n            Release: <span className=\"data\">{release_date}</span>\n          </p>\n          <h3 className=\"movie_overview\">Overview </h3>\n          <span className=\"text\">{overview}</span>\n          <p className=\"text\">\n            Popularity:{' '}\n            <span className=\"data\">{String(Math.round(popularity))}</span>\n          </p>\n          <p className=\"text\">\n            Rating: <span className=\"data\">{vote_average}</span>\n          </p>\n          <p className=\"text\">\n            Count: <span className=\"data\">{vote_count}</span>\n          </p>\n          <h3 className=\"text\">Genres</h3>\n          {genres\n            ? genres.map(({ id, name }) => (\n                <p key={id} className=\"data\">\n                  {name}\n                </p>\n              ))\n            : `We don't have any ganres for this movie.`}\n        </div>\n\n        <Navigetion.NavMovieDetails match={match} />\n\n        <Switch>\n          <Route path={`${match.path}/cast`} component={Cast} />\n          <Route path={`${match.path}/reviews`} component={Reviews} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}